{"id":"utils/debug.js","dependencies":[{"name":"C:\\Users\\Sandra\\Documents\\Uluru Entertainment\\Phaser3Tilemap-testing\\package.json","includedInParent":true,"mtime":1644736518421},{"name":"phaser","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\Sandra\\Documents\\Uluru Entertainment\\Phaser3Tilemap-testing\\src\\utils\\debug.js","resolved":"C:\\Users\\Sandra\\Documents\\Uluru Entertainment\\Phaser3Tilemap-testing\\node_modules\\phaser\\dist\\phaser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debugDraw = void 0;\n\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar debugDraw = function debugDraw(layer, scene) {\n  //DEBUG wall collider \n  var debugGraphics = scene.add.graphics().setAlpha(0.75);\n  layer.renderDebug(debugGraphics, {\n    tileColor: null,\n    //Colour of non-colliding tiles\n    collidingTileColor: new _phaser.default.Display.Color(243, 134, 48, 255),\n    // Color of colliding tiles\n    faceColor: new _phaser.default.Display.Color(40, 39, 37, 255) //Colour of colliding face edges\n\n  });\n};\n\nexports.debugDraw = debugDraw;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"utils/debug.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"utils/debug.js","original":{"line":3,"column":0}},{"name":"debugDraw","generated":{"line":12,"column":4},"source":"utils/debug.js","original":{"line":3,"column":6}},{"generated":{"line":12,"column":13},"source":"utils/debug.js","original":{"line":3,"column":15}},{"generated":{"line":12,"column":16},"source":"utils/debug.js","original":{"line":3,"column":18}},{"name":"debugDraw","generated":{"line":12,"column":25},"source":"utils/debug.js","original":{"line":3,"column":6}},{"generated":{"line":12,"column":34},"source":"utils/debug.js","original":{"line":3,"column":18}},{"name":"layer","generated":{"line":12,"column":35},"source":"utils/debug.js","original":{"line":3,"column":19}},{"generated":{"line":12,"column":40},"source":"utils/debug.js","original":{"line":3,"column":18}},{"name":"scene","generated":{"line":12,"column":42},"source":"utils/debug.js","original":{"line":3,"column":26}},{"generated":{"line":12,"column":47},"source":"utils/debug.js","original":{"line":3,"column":18}},{"generated":{"line":12,"column":49},"source":"utils/debug.js","original":{"line":3,"column":36}},{"generated":{"line":13,"column":0},"source":"utils/debug.js","original":{"line":4,"column":6}},{"generated":{"line":14,"column":0},"source":"utils/debug.js","original":{"line":5,"column":6}},{"name":"debugGraphics","generated":{"line":14,"column":6},"source":"utils/debug.js","original":{"line":5,"column":12}},{"generated":{"line":14,"column":19},"source":"utils/debug.js","original":{"line":5,"column":25}},{"name":"scene","generated":{"line":14,"column":22},"source":"utils/debug.js","original":{"line":5,"column":28}},{"generated":{"line":14,"column":27},"source":"utils/debug.js","original":{"line":5,"column":33}},{"name":"add","generated":{"line":14,"column":28},"source":"utils/debug.js","original":{"line":5,"column":34}},{"generated":{"line":14,"column":31},"source":"utils/debug.js","original":{"line":5,"column":28}},{"name":"graphics","generated":{"line":14,"column":32},"source":"utils/debug.js","original":{"line":5,"column":38}},{"generated":{"line":14,"column":40},"source":"utils/debug.js","original":{"line":5,"column":28}},{"name":"setAlpha","generated":{"line":14,"column":43},"source":"utils/debug.js","original":{"line":5,"column":49}},{"generated":{"line":14,"column":51},"source":"utils/debug.js","original":{"line":5,"column":28}},{"generated":{"line":14,"column":52},"source":"utils/debug.js","original":{"line":5,"column":58}},{"generated":{"line":14,"column":56},"source":"utils/debug.js","original":{"line":5,"column":28}},{"generated":{"line":14,"column":57},"source":"utils/debug.js","original":{"line":5,"column":6}},{"name":"layer","generated":{"line":15,"column":0},"source":"utils/debug.js","original":{"line":6,"column":6}},{"name":"layer","generated":{"line":15,"column":2},"source":"utils/debug.js","original":{"line":6,"column":6}},{"generated":{"line":15,"column":7},"source":"utils/debug.js","original":{"line":6,"column":11}},{"name":"renderDebug","generated":{"line":15,"column":8},"source":"utils/debug.js","original":{"line":6,"column":12}},{"generated":{"line":15,"column":19},"source":"utils/debug.js","original":{"line":6,"column":6}},{"name":"debugGraphics","generated":{"line":15,"column":20},"source":"utils/debug.js","original":{"line":6,"column":24}},{"generated":{"line":15,"column":33},"source":"utils/debug.js","original":{"line":6,"column":6}},{"generated":{"line":15,"column":35},"source":"utils/debug.js","original":{"line":6,"column":39}},{"name":"tileColor","generated":{"line":16,"column":0},"source":"utils/debug.js","original":{"line":7,"column":10}},{"name":"tileColor","generated":{"line":16,"column":4},"source":"utils/debug.js","original":{"line":7,"column":10}},{"generated":{"line":16,"column":13},"source":"utils/debug.js","original":{"line":7,"column":19}},{"generated":{"line":16,"column":15},"source":"utils/debug.js","original":{"line":7,"column":21}},{"generated":{"line":16,"column":19},"source":"utils/debug.js","original":{"line":6,"column":39}},{"generated":{"line":17,"column":0},"source":"utils/debug.js","original":{"line":7,"column":27}},{"name":"collidingTileColor","generated":{"line":18,"column":0},"source":"utils/debug.js","original":{"line":8,"column":10}},{"name":"collidingTileColor","generated":{"line":18,"column":4},"source":"utils/debug.js","original":{"line":8,"column":10}},{"generated":{"line":18,"column":22},"source":"utils/debug.js","original":{"line":8,"column":28}},{"generated":{"line":18,"column":24},"source":"utils/debug.js","original":{"line":8,"column":30}},{"name":"Phaser","generated":{"line":18,"column":28},"source":"utils/debug.js","original":{"line":8,"column":34}},{"name":"Display","generated":{"line":18,"column":44},"source":"utils/debug.js","original":{"line":8,"column":41}},{"generated":{"line":18,"column":51},"source":"utils/debug.js","original":{"line":8,"column":34}},{"name":"Color","generated":{"line":18,"column":52},"source":"utils/debug.js","original":{"line":8,"column":49}},{"generated":{"line":18,"column":57},"source":"utils/debug.js","original":{"line":8,"column":30}},{"generated":{"line":18,"column":58},"source":"utils/debug.js","original":{"line":8,"column":55}},{"generated":{"line":18,"column":61},"source":"utils/debug.js","original":{"line":8,"column":30}},{"generated":{"line":18,"column":63},"source":"utils/debug.js","original":{"line":8,"column":60}},{"generated":{"line":18,"column":66},"source":"utils/debug.js","original":{"line":8,"column":30}},{"generated":{"line":18,"column":68},"source":"utils/debug.js","original":{"line":8,"column":65}},{"generated":{"line":18,"column":70},"source":"utils/debug.js","original":{"line":8,"column":30}},{"generated":{"line":18,"column":72},"source":"utils/debug.js","original":{"line":8,"column":69}},{"generated":{"line":18,"column":75},"source":"utils/debug.js","original":{"line":8,"column":30}},{"generated":{"line":18,"column":76},"source":"utils/debug.js","original":{"line":6,"column":39}},{"generated":{"line":19,"column":0},"source":"utils/debug.js","original":{"line":8,"column":75}},{"name":"faceColor","generated":{"line":20,"column":0},"source":"utils/debug.js","original":{"line":9,"column":10}},{"name":"faceColor","generated":{"line":20,"column":4},"source":"utils/debug.js","original":{"line":9,"column":10}},{"generated":{"line":20,"column":13},"source":"utils/debug.js","original":{"line":9,"column":19}},{"generated":{"line":20,"column":15},"source":"utils/debug.js","original":{"line":9,"column":21}},{"name":"Phaser","generated":{"line":20,"column":19},"source":"utils/debug.js","original":{"line":9,"column":25}},{"name":"Display","generated":{"line":20,"column":35},"source":"utils/debug.js","original":{"line":9,"column":32}},{"generated":{"line":20,"column":42},"source":"utils/debug.js","original":{"line":9,"column":25}},{"name":"Color","generated":{"line":20,"column":43},"source":"utils/debug.js","original":{"line":9,"column":40}},{"generated":{"line":20,"column":48},"source":"utils/debug.js","original":{"line":9,"column":21}},{"generated":{"line":20,"column":49},"source":"utils/debug.js","original":{"line":9,"column":46}},{"generated":{"line":20,"column":51},"source":"utils/debug.js","original":{"line":9,"column":21}},{"generated":{"line":20,"column":53},"source":"utils/debug.js","original":{"line":9,"column":50}},{"generated":{"line":20,"column":55},"source":"utils/debug.js","original":{"line":9,"column":21}},{"generated":{"line":20,"column":57},"source":"utils/debug.js","original":{"line":9,"column":54}},{"generated":{"line":20,"column":59},"source":"utils/debug.js","original":{"line":9,"column":21}},{"generated":{"line":20,"column":61},"source":"utils/debug.js","original":{"line":9,"column":58}},{"generated":{"line":20,"column":64},"source":"utils/debug.js","original":{"line":9,"column":21}},{"generated":{"line":20,"column":65},"source":"utils/debug.js","original":{"line":6,"column":39}},{"generated":{"line":20,"column":66},"source":"utils/debug.js","original":{"line":9,"column":63}},{"generated":{"line":22,"column":0},"source":"utils/debug.js","original":{"line":6,"column":39}},{"generated":{"line":22,"column":3},"source":"utils/debug.js","original":{"line":6,"column":6}},{"generated":{"line":23,"column":0},"source":"utils/debug.js","original":{"line":12,"column":1}},{"generated":{"line":23,"column":1},"source":"utils/debug.js","original":{"line":3,"column":0}}],"sources":{"utils/debug.js":"import Phaser from \"phaser\"\r\n\r\nconst debugDraw = (layer, scene) => {\r\n      //DEBUG wall collider \r\n      const debugGraphics = scene.add.graphics().setAlpha(0.75)\r\n      layer.renderDebug(debugGraphics, {\r\n          tileColor: null, //Colour of non-colliding tiles\r\n          collidingTileColor: new Phaser.Display.Color(243, 134, 48, 255), // Color of colliding tiles\r\n          faceColor: new Phaser.Display.Color(40, 39, 37, 255) //Colour of colliding face edges\r\n      })\r\n\r\n}\r\n\r\nexport {\r\n    debugDraw\r\n}"},"lineCount":null}},"error":null,"hash":"de15fde136152e1b6ec92d4ccff9143a","cacheData":{"env":{}}}